void	ft_pos_new_line(t_data *data)
{
	int len;
	int *pos;
	int count;
	t_list *tmp;
	t_list *tmp_;

	// count = 0;
	// tmp = NULL;
	// tmp_ = NULL;
	// pos = ft_memalloc(2);
	// len = (int)data->sel->len_prompt + (int)data->entry->len_line;
	// if (data->sel->pos[1] < len - 1)
	// {
	// 	pos[1] = data->sel->pos[1];
	// 	pos[0] = data->sel->pos[0];
	// 	tmp = ft_find_pos_int_lst(data);
	// 	tmp_ = tmp;
	// 	ft_move_cursor(data, RIGHT);
	// 	while (tmp)
	// 	{
	// 		ft_move_cursor(data, RIGHT);
	// 		del_one_character(data, DEL);
	// 		tmp = tmp->next;
	// 	}
	// 	print_lst_line(data, tmp_->next);
	// 	tputs(tgoto(tgetstr("cm", NULL), pos[1] + 1, pos[0]), 1, ft_putchar_select);
	// 	// if (len > (data->sel->width - 1) && pos < len)
	// 	// {
	// 	// 	tmp = data->entry->line;
			
	// 	// 	//ft_putnbr_fd(data->entry->len_line/data->sel->width, data->sel->tty);
	// 	// 	//print_lst_line(data, tmp);
	// 	// 	tmp = NULL;
	// 	// }
	// }
	if (data->sel->pos[1] == (data->sel->width - 1) && data->sel->pos[0] == (data->sel->height - 1))
	{
		ft_putchar_fd('\n', data->sel->tty);
		data->sel->pos_start[0] -= 1;
	}
}

t_list	*ft_find_pos_int_lst(t_data *data)
{
	int count;
	int multipy;
	t_list *tmp;

	count = -1;
	tmp = NULL;
	tmp = data->entry->line;
	data->sel->pos_search = 0;
	if (data->sel->pos[0] == data->sel->pos_start[0])
		data->sel->pos_search = (data->sel->pos[1] - data->sel->len_prompt);
	else
	{
		multipy = 0;
		multipy = (data->entry->len_line - data->sel->len_prompt);
		// data->sel->pos_search = data->sel->pos[1] - data->sel->len_prompt;
		data->sel->pos_search = (data->entry->len_line - data->sel->len_prompt) - (data->sel->pos[1]);
	}
	while(tmp->next && ++count <= data->sel->pos_search)
		tmp = tmp->next;
	return (tmp);
}

void ft_move_left(t_data *data)
{
	t_select *sel;

	sel = NULL;
	sel = data->sel;
	if (sel->pos[1] > (int)sel->len_prompt && sel->pos[0] == sel->pos_start[0])
		data->sel->pos[1] -= 1;
	else if (sel->pos[0] != sel->pos_start[0] && sel->pos[1] > 0)
		data->sel->pos[1] -= 1;
	else if (sel->pos[1] == 0)
	{
		data->sel->pos[1] = (data->sel->width - 1);
		data->sel->pos[0] -= 1;
	}
	else
		return ;
}