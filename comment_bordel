// t_list	*ft_find_pos_int_lst(t_data *data)
// {
// 	int count;
// 	int multipy;
// 	t_list *tmp;

// 	count = -1;
// 	tmp = NULL;
// 	tmp = data->entry->line;
// 	data->sel->pos_search = 0;
// 	if (data->sel->pos[0] == data->sel->pos_start[0])
// 		data->sel->pos_search = (data->sel->pos[1] - data->sel->len_prompt);
// 	else
// 	{
// 		multipy = data->sel->pos[0] - data->sel->pos_start[0];
// 		data->sel->pos_search = (data->entry->len_line) - (data->sel->pos[1]*multipy);
// 	}
// 	while(tmp->next && ++count <= data->sel->pos_search)
// 		tmp = tmp->next;
// 	return (tmp);
// }

void	ft_pos_new_line(t_data *data)
{
	int len;
	int count;
	t_list *tmp;
	t_list *tmp_;

	count = 0;
	tmp = NULL;
	tmp_ = NULL;
	len = (int)data->sel->len_prompt + (int)data->entry->len_line;
	if (data->sel->pos_search < len)
	{
		tputs(tgetstr("sc", NULL), 1, ft_putchar_select);
		tmp = tmp_;
		while (tmp_)
		{
			ft_move_cursor(data, RIGHT);
			del_one_character(data, DEL);
			tmp_ = tmp_->next;
		}
		//print_lst_line(data, tmp);
		tputs(tgetstr("rc", NULL), 1, ft_putchar_select);
	}
	if (data->sel->pos[0] == (data->sel->height - 1))
		data->sel->pos_start[0] = data->sel->pos[0] - ((int)data->entry->len_line + (int)data->sel->len_prompt)/(data->sel->width);
}

// int		ft_add_print_caract(t_data *data, char result)
// {
// 	int		pos;
// 	int		count;
// 	t_list	*tmp_swap;
// 	t_list	*tmp_lst;
// 	t_list	*tmp_st;

// 	count = 0;
// 	tmp_swap = NULL;
// 	tmp_st = NULL;
// 	tmp_lst = data->entry->line;
// 	pos = ((data->sel->pos[1] - (int)data->sel->len_prompt));
// 	if (result)
// 	{
// 		if (data->sel->pos[1] < ((int)data->sel->len_prompt + (int)data->entry->len_line))
// 		{
// 			tmp_swap = tmp_lst;
// 			while (tmp_swap && ++count < pos)
// 				tmp_swap = tmp_swap->next;
// 			tmp_st = tmp_swap->next;
// 			tmp_swap->next = NULL;
// 			ft_add_at(&tmp_swap, result);
// 			tmp_swap->next->next = tmp_st;
// 		}
// 		else
// 			ft_add_at(&tmp_lst, result);
// 		data->entry->line = tmp_lst;
// 		data->entry->len_line += 1;
// 	}
// 	return (1);
// }